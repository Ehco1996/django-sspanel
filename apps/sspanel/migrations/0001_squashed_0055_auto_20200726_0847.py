# Generated by Django 3.0.8 on 2020-07-28 00:21

from decimal import Decimal

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import pendulum
from django.conf import settings
from django.db import migrations, models

import apps.utils


class Migration(migrations.Migration):

    replaces = [
        ("sspanel", "0001_initial"),
        ("sspanel", "0002_payrequest_qrcode_url"),
        ("sspanel", "0003_auto_20181009_0909"),
        ("sspanel", "0004_auto_20190222_2209"),
        ("sspanel", "0005_auto_20190224_0625"),
        ("sspanel", "0006_user_sub_type"),
        ("sspanel", "0007_auto_20190420_2043"),
        ("sspanel", "0008_auto_20190520_1639"),
        ("sspanel", "0009_auto_20190521_1332"),
        ("sspanel", "0010_auto_20190522_1326"),
        ("sspanel", "0011_useronlineiplog"),
        ("sspanel", "0012_auto_20190528_1407"),
        ("sspanel", "0013_ssnodeonlinelog"),
        ("sspanel", "0014_ssnode"),
        ("sspanel", "0015_auto_20190601_1013"),
        ("sspanel", "0016_userssconfig_usertraffic"),
        ("sspanel", "0017_auto_20190807_1150"),
        ("sspanel", "0018_auto_20190823_1046"),
        ("sspanel", "0019_auto_20190826_0950"),
        ("sspanel", "0020_auto_20190826_1117"),
        ("sspanel", "0021_auto_20190827_1505"),
        ("sspanel", "0022_auto_20190920_2238"),
        ("sspanel", "0023_auto_20191001_1448"),
        ("sspanel", "0024_auto_20191017_1326"),
        ("sspanel", "0025_auto_20191018_1544"),
        ("sspanel", "0026_vmessnode_offset_port"),
        ("sspanel", "0027_auto_20200122_1407"),
        ("sspanel", "0028_auto_20200122_1534"),
        ("sspanel", "0029_auto_20200131_0901"),
        ("sspanel", "0030_auto_20200206_1552"),
        ("sspanel", "0031_auto_20200208_0928"),
        ("sspanel", "0032_vmessnode_relay_offset_port"),
        ("sspanel", "0033_auto_20200301_0829"),
        ("sspanel", "0034_auto_20200302_1537"),
        ("sspanel", "0035_auto_20200307_0837"),
        ("sspanel", "0036_auto_20200307_1902"),
        ("sspanel", "0037_auto_20200310_1325"),
        ("sspanel", "0038_vmessnode_listen_host"),
        ("sspanel", "0039_relayrule_isp"),
        ("sspanel", "0040_auto_20200506_0707"),
        ("sspanel", "0041_auto_20200506_0722"),
        ("sspanel", "0042_auto_20200506_0744"),
        ("sspanel", "0043_auto_20200512_0722"),
        ("sspanel", "0044_auto_20200513_0708"),
        ("sspanel", "0045_remove_purchasehistory_good"),
        ("sspanel", "0046_auto_20200513_1332"),
        ("sspanel", "0047_auto_20200517_1008"),
        ("sspanel", "0048_remove_user_sub_type"),
        ("sspanel", "0049_auto_20200619_0820"),
        ("sspanel", "0050_auto_20200621_1813"),
        ("sspanel", "0051_auto_20200623_0733"),
        ("sspanel", "0052_auto_20200704_0955"),
        ("sspanel", "0053_auto_20200720_0739"),
        ("sspanel", "0054_auto_20200720_0758"),
        ("sspanel", "0055_auto_20200726_0847"),
    ]

    initial = True

    dependencies = [
        ("auth", "0009_alter_user_last_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "inviter_id",
                    models.PositiveIntegerField(default=1, verbose_name="邀请人id"),
                ),
                (
                    "balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                        verbose_name="余额",
                    ),
                ),
                (
                    "invitecode_num",
                    models.PositiveIntegerField(default=5, verbose_name="可生成的邀请码数量"),
                ),
                (
                    "level",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="用户等级",
                    ),
                ),
                (
                    "level_expire_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="等级有效期"
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("default", "default"),
                            ("darkly", "darkly"),
                            ("flatly", "flatly"),
                            ("journal", "journal"),
                            ("materia", "materia"),
                            ("minty", "minty"),
                            ("spacelab", "spacelab"),
                            ("superhero", "superhero"),
                        ],
                        default="default",
                        max_length=10,
                        verbose_name="主题",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "vmess_uuid",
                    models.CharField(
                        default="", max_length=64, verbose_name="Vmess uuid"
                    ),
                ),
                (
                    "download_traffic",
                    models.BigIntegerField(default=0, verbose_name="下载流量"),
                ),
                (
                    "last_use_time",
                    models.DateTimeField(
                        blank=True, db_index=True, null=True, verbose_name="上次使用时间"
                    ),
                ),
                (
                    "ss_method",
                    models.CharField(
                        choices=[
                            ("aes-256-cfb", "aes-256-cfb"),
                            ("aes-128-ctr", "aes-128-ctr"),
                            ("rc4-md5", "rc4-md5"),
                            ("salsa20", "salsa20"),
                            ("chacha20", "chacha20"),
                            ("none", "none"),
                            ("chacha20-ietf-poly1305", "chacha20-ietf-poly1305"),
                            ("aes-128-gcm", "aes-128-gcm"),
                            ("aes-256-gcm", "aes-256-gcm"),
                        ],
                        default="aes-256-cfb",
                        max_length=32,
                        verbose_name="加密",
                    ),
                ),
                (
                    "ss_password",
                    models.CharField(
                        default=apps.utils.get_short_random_string,
                        max_length=32,
                        unique=True,
                        verbose_name="密码",
                    ),
                ),
                (
                    "ss_port",
                    models.IntegerField(default=1025, unique=True, verbose_name="端口"),
                ),
                (
                    "total_traffic",
                    models.BigIntegerField(default=5368709120, verbose_name="总流量"),
                ),
                (
                    "upload_traffic",
                    models.BigIntegerField(default=0, verbose_name="上传流量"),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "用户",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Announcement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time", models.DateTimeField(auto_now_add=True, verbose_name="时间")),
                ("body", models.TextField(verbose_name="主体")),
            ],
            options={
                "verbose_name_plural": "系统公告",
                "ordering": ("-time",),
            },
        ),
        migrations.CreateModel(
            name="Donate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="捐赠时间"
                    ),
                ),
                (
                    "money",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                        verbose_name="捐赠金额",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="捐赠人",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "捐赠记录",
                "ordering": ("-time",),
            },
        ),
        migrations.CreateModel(
            name="Goods",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="待编辑", max_length=128, verbose_name="商品名字"
                    ),
                ),
                (
                    "content",
                    models.CharField(
                        default="待编辑", max_length=256, verbose_name="商品描述"
                    ),
                ),
                (
                    "transfer",
                    models.BigIntegerField(default=1073741824, verbose_name="增加的流量"),
                ),
                (
                    "money",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                        verbose_name="金额",
                    ),
                ),
                (
                    "level",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(9),
                            django.core.validators.MinValueValidator(0),
                        ],
                        verbose_name="设置等级",
                    ),
                ),
                (
                    "days",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MaxValueValidator(365),
                            django.core.validators.MinValueValidator(1),
                        ],
                        verbose_name="设置等级时间(天)",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(1, "上架"), (-1, "下架")], default=1, verbose_name="商品状态"
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=1, verbose_name="排序"),
                ),
            ],
            options={
                "verbose_name_plural": "商品",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="InviteCode",
            fields=[
                (
                    "code_type",
                    models.IntegerField(
                        choices=[(1, "公开"), (0, "不公开")], default=0, verbose_name="类型"
                    ),
                ),
                (
                    "user_id",
                    models.PositiveIntegerField(default=1, verbose_name="邀请人ID"),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        default=apps.utils.get_long_random_string,
                        max_length=40,
                        primary_key=True,
                        serialize=False,
                        verbose_name="邀请码",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("used", models.BooleanField(default=False, verbose_name="是否使用")),
            ],
            options={
                "verbose_name_plural": "邀请码",
                "ordering": ("used", "-created_at"),
            },
        ),
        migrations.CreateModel(
            name="MoneyCode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="用户名"
                    ),
                ),
                ("time", models.DateTimeField(auto_now_add=True, verbose_name="捐赠时间")),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        default=apps.utils.get_long_random_string,
                        max_length=40,
                        unique=True,
                        verbose_name="充值码",
                    ),
                ),
                (
                    "number",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=10,
                        max_digits=10,
                        null=True,
                        verbose_name="捐赠金额",
                    ),
                ),
                ("isused", models.BooleanField(default=False, verbose_name="是否使用")),
            ],
            options={
                "verbose_name_plural": "充值码",
                "ordering": ("isused",),
            },
        ),
        migrations.CreateModel(
            name="PurchaseHistory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=128, verbose_name="购买者")),
                (
                    "money",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                        verbose_name="金额",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="购买时间"),
                ),
                (
                    "good_name",
                    models.CharField(
                        db_index=True, default="", max_length=128, verbose_name="商品名"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "购买记录",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="RebateRecord",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_id",
                    models.PositiveIntegerField(default=1, verbose_name="返利人ID"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "money",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                        verbose_name="金额",
                    ),
                ),
                (
                    "consumer_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="消费者ID"
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
                "verbose_name_plural": "返利记录",
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time", models.DateTimeField(auto_now_add=True, verbose_name="时间")),
                ("title", models.CharField(max_length=128, verbose_name="标题")),
                ("body", models.TextField(verbose_name="内容主体")),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(1, "开启"), (-1, "关闭")], default=1, verbose_name="状态"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "工单",
                "ordering": ("-time",),
            },
        ),
        migrations.CreateModel(
            name="UserOrder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(0, "created"), (1, "paid"), (2, "finished")],
                        db_index=True,
                        verbose_name="订单状态",
                    ),
                ),
                (
                    "out_trade_no",
                    models.CharField(
                        db_index=True, max_length=64, unique=True, verbose_name="流水号"
                    ),
                ),
                (
                    "qrcode_url",
                    models.CharField(max_length=512, null=True, verbose_name="支付连接"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="金额"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="时间"
                    ),
                ),
                (
                    "expired_at",
                    models.DateTimeField(db_index=True, verbose_name="过期时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "用户订单",
                "index_together": {("user", "status")},
            },
        ),
        migrations.CreateModel(
            name="UserOnLineIpLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.IntegerField(db_index=True)),
                ("node_id", models.IntegerField()),
                ("ip", models.CharField(max_length=128)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                "verbose_name_plural": "用户在线IP",
                "ordering": ["-created_at"],
                "unique_together": set(),
                "index_together": {("node_id", "created_at")},
            },
        ),
        migrations.CreateModel(
            name="UserTrafficLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.IntegerField()),
                ("node_id", models.IntegerField()),
                ("date", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "upload_traffic",
                    models.BigIntegerField(default=0, verbose_name="上传流量"),
                ),
                (
                    "download_traffic",
                    models.BigIntegerField(default=0, verbose_name="下载流量"),
                ),
                (
                    "node_type",
                    models.CharField(
                        choices=[("ss", "ss"), ("vmess", "vmess")],
                        default="ss",
                        max_length=32,
                        verbose_name="节点类型",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "流量记录",
                "ordering": ["-date"],
                "index_together": {("user_id", "node_type", "node_id", "date")},
            },
        ),
        migrations.CreateModel(
            name="UserCheckInLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.PositiveIntegerField()),
                (
                    "date",
                    models.DateField(
                        db_index=True, default=pendulum.today, verbose_name="记录日期"
                    ),
                ),
                (
                    "increased_traffic",
                    models.BigIntegerField(default=0, verbose_name="增加的流量"),
                ),
            ],
            options={
                "unique_together": {("user_id", "date")},
                "verbose_name_plural": "用户签到记录",
            },
        ),
        migrations.CreateModel(
            name="UserRefLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.PositiveIntegerField()),
                ("register_count", models.IntegerField(default=0)),
                (
                    "date",
                    models.DateField(
                        db_index=True, default=pendulum.today, verbose_name="记录日期"
                    ),
                ),
            ],
            options={
                "unique_together": {("user_id", "date")},
                "verbose_name_plural": "用户推荐记录",
            },
        ),
        migrations.CreateModel(
            name="EmailSendLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(db_index=True, max_length=128)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "邮件发送记录",
            },
        ),
        migrations.CreateModel(
            name="NodeOnlineLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("node_id", models.IntegerField()),
                (
                    "node_type",
                    models.CharField(
                        choices=[("ss", "ss"), ("vmess", "vmess")],
                        default="ss",
                        max_length=32,
                        verbose_name="节点类型",
                    ),
                ),
                ("online_user_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("active_tcp_connections", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "节点在线记录",
                "ordering": ["-created_at"],
                "index_together": {("node_type", "node_id", "created_at")},
            },
        ),
        migrations.CreateModel(
            name="VmessNode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("node_id", models.IntegerField(unique=True)),
                ("level", models.PositiveIntegerField(default=0)),
                ("name", models.CharField(max_length=32, verbose_name="名字")),
                ("info", models.CharField(max_length=1024, verbose_name="节点说明")),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("US", "美国"),
                            ("CN", "中国"),
                            ("GB", "英国"),
                            ("SG", "新加坡"),
                            ("TW", "台湾"),
                            ("HK", "香港"),
                            ("JP", "日本"),
                            ("FR", "法国"),
                            ("DE", "德国"),
                            ("KR", "韩国"),
                            ("JE", "泽西岛"),
                            ("NZ", "新西兰"),
                            ("MX", "墨西哥"),
                            ("CA", "加拿大"),
                            ("BR", "巴西"),
                            ("CU", "古巴"),
                            ("CZ", "捷克"),
                            ("EG", "埃及"),
                            ("FI", "芬兰"),
                            ("GR", "希腊"),
                            ("GU", "关岛"),
                            ("IS", "冰岛"),
                            ("MO", "澳门"),
                            ("NL", "荷兰"),
                            ("NO", "挪威"),
                            ("PL", "波兰"),
                            ("IT", "意大利"),
                            ("IE", "爱尔兰"),
                            ("AR", "阿根廷"),
                            ("PT", "葡萄牙"),
                            ("AU", "澳大利亚"),
                            ("RU", "俄罗斯联邦"),
                            ("CF", "中非共和国"),
                        ],
                        default="CN",
                        max_length=5,
                        verbose_name="国家",
                    ),
                ),
                (
                    "used_traffic",
                    models.BigIntegerField(default=0, verbose_name="已用流量"),
                ),
                (
                    "total_traffic",
                    models.BigIntegerField(default=1073741824, verbose_name="总流量"),
                ),
                (
                    "enable",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="是否开启"
                    ),
                ),
                ("server", models.CharField(max_length=128, verbose_name="服务器地址")),
                (
                    "inbound_tag",
                    models.CharField(default="proxy", max_length=64, verbose_name="标签"),
                ),
                ("alter_id", models.IntegerField(default=1, verbose_name="额外ID数量")),
                (
                    "grpc_host",
                    models.CharField(
                        default="0.0.0.0", max_length=64, verbose_name="grpc地址"
                    ),
                ),
                (
                    "grpc_port",
                    models.CharField(
                        default="8080", max_length=64, verbose_name="grpc端口"
                    ),
                ),
                (
                    "enlarge_scale",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        max_digits=10,
                        verbose_name="倍率",
                    ),
                ),
                (
                    "ws_host",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="域名"
                    ),
                ),
                (
                    "ws_path",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="ws_path"
                    ),
                ),
                (
                    "listen_host",
                    models.CharField(
                        default="0.0.0.0", max_length=64, verbose_name="本地监听地址"
                    ),
                ),
                (
                    "client_port",
                    models.IntegerField(default=10086, verbose_name="客户端端口"),
                ),
                (
                    "service_port",
                    models.IntegerField(default=10086, verbose_name="服务端端口"),
                ),
                (
                    "ehco_listen_host",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="隧道监听地址"
                    ),
                ),
                (
                    "ehco_listen_port",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="隧道监听端口"
                    ),
                ),
                (
                    "ehco_listen_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="隧道监听类型",
                    ),
                ),
                (
                    "ehco_transport_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="隧道传输类型",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Vmess节点",
            },
        ),
        migrations.CreateModel(
            name="SSNode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("node_id", models.IntegerField(unique=True)),
                (
                    "enable",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="是否开启"
                    ),
                ),
                ("level", models.PositiveIntegerField(default=0)),
                (
                    "custom_method",
                    models.BooleanField(default=False, verbose_name="自定义加密"),
                ),
                ("name", models.CharField(max_length=32, verbose_name="名字")),
                ("info", models.CharField(max_length=1024, verbose_name="节点说明")),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("US", "美国"),
                            ("CN", "中国"),
                            ("GB", "英国"),
                            ("SG", "新加坡"),
                            ("TW", "台湾"),
                            ("HK", "香港"),
                            ("JP", "日本"),
                            ("FR", "法国"),
                            ("DE", "德国"),
                            ("KR", "韩国"),
                            ("JE", "泽西岛"),
                            ("NZ", "新西兰"),
                            ("MX", "墨西哥"),
                            ("CA", "加拿大"),
                            ("BR", "巴西"),
                            ("CU", "古巴"),
                            ("CZ", "捷克"),
                            ("EG", "埃及"),
                            ("FI", "芬兰"),
                            ("GR", "希腊"),
                            ("GU", "关岛"),
                            ("IS", "冰岛"),
                            ("MO", "澳门"),
                            ("NL", "荷兰"),
                            ("NO", "挪威"),
                            ("PL", "波兰"),
                            ("IT", "意大利"),
                            ("IE", "爱尔兰"),
                            ("AR", "阿根廷"),
                            ("PT", "葡萄牙"),
                            ("AU", "澳大利亚"),
                            ("RU", "俄罗斯联邦"),
                            ("CF", "中非共和国"),
                        ],
                        default="CN",
                        max_length=5,
                        verbose_name="国家",
                    ),
                ),
                ("server", models.CharField(max_length=128, verbose_name="服务器地址")),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("aes-256-cfb", "aes-256-cfb"),
                            ("aes-128-ctr", "aes-128-ctr"),
                            ("rc4-md5", "rc4-md5"),
                            ("salsa20", "salsa20"),
                            ("chacha20", "chacha20"),
                            ("none", "none"),
                            ("chacha20-ietf-poly1305", "chacha20-ietf-poly1305"),
                            ("aes-128-gcm", "aes-128-gcm"),
                            ("aes-256-gcm", "aes-256-gcm"),
                        ],
                        default="aes-256-cfb",
                        max_length=32,
                        verbose_name="加密类型",
                    ),
                ),
                (
                    "used_traffic",
                    models.BigIntegerField(default=0, verbose_name="已用流量"),
                ),
                (
                    "total_traffic",
                    models.BigIntegerField(default=1073741824, verbose_name="总流量"),
                ),
                ("speed_limit", models.IntegerField(default=0, verbose_name="限速")),
                (
                    "enlarge_scale",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        max_digits=10,
                        verbose_name="倍率",
                    ),
                ),
                (
                    "port",
                    models.IntegerField(
                        blank=True, help_text="单端口多用户端口", null=True, verbose_name="单端口"
                    ),
                ),
                (
                    "ehco_listen_host",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="隧道监听地址"
                    ),
                ),
                (
                    "ehco_listen_port",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="隧道监听端口"
                    ),
                ),
                (
                    "ehco_listen_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="隧道监听类型",
                    ),
                ),
                (
                    "ehco_transport_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="隧道传输类型",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "SS节点",
            },
        ),
        migrations.CreateModel(
            name="RelayNode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("node_id", models.IntegerField(unique=True)),
                ("name", models.CharField(max_length=32, verbose_name="名字")),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("US", "美国"),
                            ("CN", "中国"),
                            ("GB", "英国"),
                            ("SG", "新加坡"),
                            ("TW", "台湾"),
                            ("HK", "香港"),
                            ("JP", "日本"),
                            ("FR", "法国"),
                            ("DE", "德国"),
                            ("KR", "韩国"),
                            ("JE", "泽西岛"),
                            ("NZ", "新西兰"),
                            ("MX", "墨西哥"),
                            ("CA", "加拿大"),
                            ("BR", "巴西"),
                            ("CU", "古巴"),
                            ("CZ", "捷克"),
                            ("EG", "埃及"),
                            ("FI", "芬兰"),
                            ("GR", "希腊"),
                            ("GU", "关岛"),
                            ("IS", "冰岛"),
                            ("MO", "澳门"),
                            ("NL", "荷兰"),
                            ("NO", "挪威"),
                            ("PL", "波兰"),
                            ("IT", "意大利"),
                            ("IE", "爱尔兰"),
                            ("AR", "阿根廷"),
                            ("PT", "葡萄牙"),
                            ("AU", "澳大利亚"),
                            ("RU", "俄罗斯联邦"),
                            ("CF", "中非共和国"),
                        ],
                        default="CN",
                        max_length=5,
                        verbose_name="国家",
                    ),
                ),
                (
                    "enable",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="是否开启"
                    ),
                ),
                ("server", models.CharField(max_length=128, verbose_name="服务器地址")),
                (
                    "isp",
                    models.CharField(
                        choices=[
                            ("移动", "移动"),
                            ("联通", "联通"),
                            ("电信", "电信"),
                            ("BGP", "BGP"),
                        ],
                        default="BGP",
                        max_length=64,
                        verbose_name="ISP线路",
                    ),
                ),
                (
                    "ehco_listen_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="隧道监听类型",
                    ),
                ),
                (
                    "ehco_ss_lb_port",
                    models.IntegerField(
                        blank=True,
                        help_text="ss负载均衡端口",
                        null=True,
                        verbose_name="ss负载均衡端口",
                    ),
                ),
                (
                    "ehco_transport_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="隧道传输类型",
                    ),
                ),
                (
                    "ehco_vmess_lb_port",
                    models.IntegerField(
                        blank=True,
                        help_text="vmess负载均衡端口",
                        null=True,
                        verbose_name="vmess负载均衡端口",
                    ),
                ),
                ("level", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "中转节点",
            },
        ),
        migrations.CreateModel(
            name="SSRelayRule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("relay_port", models.CharField(max_length=64, verbose_name="中转端口")),
                (
                    "ss_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="relay_rules",
                        to="sspanel.SSNode",
                        verbose_name="SS节点",
                    ),
                ),
                (
                    "relay_node",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ss_relay_rules",
                        to="sspanel.RelayNode",
                        verbose_name="中转节点",
                    ),
                ),
                (
                    "listen_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="监听类型",
                    ),
                ),
                (
                    "transport_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="传输类型",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "SS转发规则",
            },
        ),
        migrations.CreateModel(
            name="VmessRelayRule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("relay_port", models.CharField(max_length=64, verbose_name="中转端口")),
                (
                    "vmess_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="relay_rules",
                        to="sspanel.VmessNode",
                        verbose_name="Vmess节点",
                    ),
                ),
                (
                    "relay_node",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="vmess_relay_rules",
                        to="sspanel.RelayNode",
                        verbose_name="中转节点",
                    ),
                ),
                (
                    "listen_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="监听类型",
                    ),
                ),
                (
                    "transport_type",
                    models.CharField(
                        choices=[("raw", "raw"), ("wss", "wss"), ("mwss", "mwss")],
                        default="raw",
                        max_length=64,
                        verbose_name="传输类型",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Vmess转发规则",
            },
        ),
    ]
